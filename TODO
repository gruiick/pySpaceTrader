# $Id: TODO 1544.develop.3 $
# SPDX-License-Identifier: BSD-2-Clause

====
TODO
====

* update_stocks() within next_turn()
    - update_shipyard() with progressive completion

* Bank tab
    * ? credit (pour rembourser le ship) ?
    crédit = loan (+compute interests every turn)

* Universe as an object? <- a list is OK for now
    which turn are we? (in case of saved game)
        where to save it? universe or captain?
        why? is turn that important?
        -> each travel is, at minimum, one turn
        -> each encounter will be at least one turn
        -> each combat will be several
    ease save/load ? (only one object to deal with?)
    (re)compute prices & stocks on planets each turn

* Shipyard tab
    only on Industrial to Hi-tech level [5-7]   -> OK
    display Planet.Shipyard(), which contain Ship()  -> OK
    show available ships, caracteristics and prices  -> OK
    buy/replace current ship                        -> OK
    transfert elements to new ship                  -> OK
    weapons avail if 'firearms' in location.stocks
    shields avail if 'robots'  in location.stocks + progress bar on damages
    hull: progress bar on damages
    repair button (and costs?)
    show available shipyards on GalacticMap (option on/off? only on visited planets?)

* News tab (3 frames)
    - show local news (plague, war, etc)
    - show available mercenary (for hiring)
    - show Galactic News (for quests, bounty, etc.)

* Skills management (with status)

* Mercenary (hire, pay, use skills)

* "encounters" management
    dice rolling -> trade meet / combat
    https://fr.wikipedia.org/wiki/Lois_de_Lanchester
    https://www.youtube.com/watch?v=TNcJdGtWhfc

* a lot of simple errors need to be taken care of -> display something instead of rage-quit :o)
    * AttributeError: 'NoneType' object has no attribute 'replace'
    * no game open
    * open, cancel
    * load, cancel
    * etc.


Later:
======
    * vaisseaux (position(s), type: traders, smugglers, pirates, SpacePolice),
    * interactions within "next turn" -> meets, trades, combats and controls
    * quêtes (tribbles!)

    * tribbles will reproduce a lot, filling empty cargo pod, eating (emptying) food, medecine, narcotics, even furs, if there is nothing else. They are a plague. The only ways to get rid of it are to sell the ship, or destroy it in a space fight.


Done:
=====

* Bank tab
    * transactions log -> OK
    * display transactions log -> OK
    * incomes (profits) vs expenses (fuel)  -> OK
    * invoices ? (goods, qty, price) -> profit/loss ? <- detailed?
        warning: in case of illegal goods, you don't want StarPolice to find
        your detailed invoices -> it's part of the game, they will charge you with felony

* Captain Board
    -> different from bank account (See Bank Tab)
solde = balance (+gain, -loss)
cash != balance
achat = purchase, buy -> cargo qty, cargo value
vente = sale, sell (vendre)

* séparer la définition de l'UI de l'usage de l'UI -> gui.py / main.py ?


* sGUI :
    tester PySimpleGUI  -> OK
    bascule *en cours*  -> OK
    * https://pysimplegui.readthedocs.io/en/latest/
    * https://pysimplegui.readthedocs.io/en/latest/cookbook/

    afficher location.slip et destination.slip -> OK
    afficher la Captain Board -> OK

* fine tuning of tk (fonts, etc) <- migrate to PySimpleGUI
    DONE OK

* rename cli_01.py en core.py et modifier *mockup*  -> OK

* tkGUI .pack() -> .grid() OK
 N
W E
 S

* sauver, ouvrir : shelve OK

* si set.destination = False, next_turn = button.state='disabled'
    tkGUI, sGUI: OK

* new game: OK
    générer l'univers: OK
        étoiles (liste de positions), OK
        [tkGUI: carte 2D] OK
        [sGUI: carte 2D] OK

        planètes (liste : position, type, géopolitique, biens), OK
        [tkGUI: affichage des textes] OK
        [sGUI: affichage des textes] OK

* gérer les stocks par planete OK -> PriceSlip class

* collision, bbox -> OK
https://www.geeksforgeeks.org/python-math-function-hypot/ OK
https://docs.python.org/fr/3/library/math.html

afficher un tableau en Tk -> OK
https://python.developpez.com/actu/127261/Creer-un-tableau-interactif-en-python-avec-Tkinter/
https://tkdocs.com/tutorial/tree.html ?

* implémenter les goods = OK pour les prix
price via formula : base * regim * specialresources * techlevel * status OK
bordereau de prix = PriceSlip OK
https://docs.python.org/fr/3/library/collections.html#collections.namedtuple

