# $Id: TODO 1540 $
# SPDX-License-Identifier: BSD-2-Clause

====
TODO
====

* séparer la définition de l'UI de l'usage de l'UI -> gui.py / main.py ?

* Captain Board:
    -> different from bank account (See Bank Tab)
solde = balance (+gain, -loss)
achat = purchase, buy -> cargo qty, cargo value
vente = sale, sell (vendre)

* Bank tab
    * transactions log ?
    * invoices ? (goods, qty, price) -> profit/loss ?

    * ? credit (pour rembourser le ship) ?
    crédit = loan (+compute interests every turn)

Later:
======
    * vaisseaux (position(s), type: traders, smugglers, pirates, SpacePolice),
    * quêtes (tribbles!)

    * pour plus tard (bien plus tard) :
octogonal bounding box (ou disque)
https://forums.futura-sciences.com/programmation-langages-algorithmique/736071-python-animer-points-a-linterieur-dun-cercle.html
http://xymaths.free.fr/Informatique-Programmation/python/Construction-1er-programme.php
https://www.piger-lesmaths.fr/polygone-regulier/
https://zestedesavoir.com/tutoriels/2835/theorie-des-collisions/


Done:
=====

* sGUI :
    tester PySimpleGUI  -> OK
    bascule *en cours*  -> OK
    * https://pysimplegui.readthedocs.io/en/latest/
    * https://pysimplegui.readthedocs.io/en/latest/cookbook/

    afficher location.slip et destination.slip -> OK
    afficher la Captain Board -> OK

* rename cli_01.py en core.py et modifier *mockup*  -> OK

* tkGUI .pack() -> .grid() OK
 N
W E
 S

* sauver, ouvrir : shelve OK

* si set.destination = False, next_turn = button.state='disabled'
    tkGUI, sGUI: OK

* new game: OK
    générer l'univers: OK
        étoiles (liste de positions), OK
        [tkGUI: carte 2D] OK
        [sGUI: carte 2D] OK

        planètes (liste : position, type, géopolitique, biens), OK
        [tkGUI: affichage des textes] OK
        [sGUI: affichage des textes] OK

* gérer les stocks par planete OK -> PriceSlip class

* collision, bbox -> OK
https://www.geeksforgeeks.org/python-math-function-hypot/ OK
https://docs.python.org/fr/3/library/math.html

afficher un tableau en Tk -> OK
https://python.developpez.com/actu/127261/Creer-un-tableau-interactif-en-python-avec-Tkinter/
https://tkdocs.com/tutorial/tree.html ?

* implémenter les goods = OK pour les prix
price via formula : base * regim * specialresources * techlevel * status OK
bordereau de prix = PriceSlip OK
https://docs.python.org/fr/3/library/collections.html#collections.namedtuple

